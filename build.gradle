apply plugin: 'java'

sourceSets {
    main {
        java {
            srcDir 'src'
        }
        resources {
            srcDir 'res'
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile 'com.fifesoft:rsyntaxtextarea:2.5.6'
    compile 'com.sun.mail:javax.mail:1.5.2'
    compile 'net.sf.opencsv:opencsv:2.3'
    compile('com.io7m.xom:xom:1.2.10') {
        transitive = false // we only need xom.jar, see http://www.xom.nu/faq.xhtml#d0e213
    }
    compile 'com.thoughtworks.xstream:xstream:1.4.8'
    compile 'org.jsoup:jsoup:1.8.1'
}

def installDir = new File(rootProject.buildDir, 'install')
def projInstallDir = new File(installDir, rootProject.name)
def libsDir = new File(projInstallDir, 'lib')

def getClassPath() {
    def deps = configurations.runtime.collect {it.getName()} + jar.archiveName 
    return deps.collect {'lib/' + it}.join(' ')
}

task editorJar(type: Jar) {
    archiveName = "Editor.jar"
    manifest {
        attributes("Main-Class": "de.uni_passau.fim.infosun.prophet.experimentEditor.ExperimentEditor",
                   "Class-Path": getClassPath())
    }
}

task viewerJar(type: Jar) {
    archiveName = "Viewer.jar"
    manifest {
        attributes("Main-Class": "de.uni_passau.fim.infosun.prophet.experimentViewer.EViewer",
                   "Class-Path": getClassPath())
    }
}

task libs(type: Copy) {
    from configurations.runtime, jar
    into libsDir
}

def relInstallDirPath = rootProject.projectDir.toURI().relativize(projInstallDir.toURI()).getPath()

task dist(type: Copy) {
    group "Distribution"
    description "Assembles a distribution of the application in the ${relInstallDirPath} directory."
    from editorJar, viewerJar
    into projInstallDir
}

dist.dependsOn libs

task distZip(type: Zip) {
    group "Distribution"
    description "Assembles a .zip file containing the application in the ${relInstallDirPath} directory."
    from dist
    destinationDir = installDir
}
